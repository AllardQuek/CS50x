compare: parses its command-line arguments, reads two files into variables as strings, and compares those strings, and then prints a list of similarities.
The strings themselves are compared in one of three ways, as specified by a command-line argument: line by line, sentence by sentence, or substring by substring.

1) index.html
- form where user can submit a value of lines, sentences, or substrings for an input called algorithm

2) lines
- given two strings, a and b, lines returns a list of the lines that are, identically, in both a and b. The list should not contain any duplicates.
- Assume that lines in a and b will be be separated by \n, but the strings in the returned  list should not end in \n.
- If both a and b contain one or more blank lines (i.e., a \n immediately preceded by no other characters), the returned list should include an empty string (i.e., "").

3) sentences
- given two strings, a and b, return a list of the unique English sentences that are, identically, present in both a and b. The list should not contain any duplicates.
- Use sent_tokenize from the Natural Language Toolkit to "tokenize" (i.e., separate) each string into a list of sentences. It can be imported with: from nltk.tokenize import sent_tokenize
- Per its documentation, sent_tokenize, given a str as input, returns a list of English sentences therein.
- It assumes that its input is indeed English text (and not, e.g., code, which might coincidentally have periods too).

4) substrings
- given two strings, a and b, and an integer, n, it returns a list of all substrings of length n that are, identically, present in both a and b. No duplicates in list.
- a substring of length n of some string is just a sequence of n characters from that string.
- if n is 2 and the string is Yale, there are three possible substrings of length 2: Ya, al, and le. Meanwhile, if n is 1 and the string is Harvard, there are seven possible substrings of length 1: H, a, r, v, a, r, and d.
- But once we eliminate duplicates, there are only five unique substrings: H, a, r, v, and d.
